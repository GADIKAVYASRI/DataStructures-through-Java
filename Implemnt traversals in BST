Node.java :
class Node {
    int data;
    Node left;
    Node right;
    
    public Node(int data) {
        this.data = data;
        this.left = null;
        this.right = null;
    }
}
BinaryTree.java :
public class BinaryTree {
    Node root;
    
    public void insert(int data) {
        root = insertRec(root, data);
    }
    
    public Node insertRec(Node root, int data) {
        if(root == null) {
            root = new Node(data);
        }
        else if(data < root.data) {
            root.left = insertRec(root.left, data);
        }
        else if(data > root.data) {
            root.right = insertRec(root.right, data);
        }
        return root;
    }
    
    public void inorder() {
        inorderRec(root);
    }
    
    public void inorderRec(Node root) {
        if(root != null) {
            inorderRec(root.left);
            System.out.print(root.data + " ");
            inorderRec(root.right);
        }
    }
    public void preorder() {
        preorderRec(root);
    }
    
    public void preorderRec(Node root) {
        if(root != null) {
            
            System.out.print(root.data + " ");
            preorderRec(root.left);
            preorderRec(root.right);
        }
    }
    public void postorder() {
        postorderRec(root);
    }
    
    public void postorderRec(Node root) {
        if(root != null) {
            postorderRec(root.left);
            postorderRec(root.right);
            System.out.print(root.data + " ");                                                                                                                                                                                                            
        }
    }
}
Main.java :
public class Main {
    public static void main(String[] args){
        BinaryTree bt=new BinaryTree();
        bt.insert(8);
        bt.insert(7);
        bt.insert(12);
        bt.insert(15);
        bt.insert(2);
        bt.insert(5);
        bt.inorder();
        System.out.println();
        bt.preorder();
        System.out.println();
        bt.postorder();
    }
}
